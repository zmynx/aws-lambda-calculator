name: GitHub Pages

on:
  deployment_status:
  push:
    branches: [main]
    paths:
      - site

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    # Allow only one concurrent deployment
    concurrency:
      group: pages
      cancel-in-progress: false

    environment:
      name: github-pages
      url: https://zmynx.github.io/aws-lambda-calculator/
    defaults:
      run:
        shell: bash
        working-directory: site
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: "20"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm clean-install

      - name: Update deployment uri (from new deployment)
        if: ${{ github.event.deployment.environment == 'prod' && github.event.deployment_status.state == 'success' }}
        run: |
          set -exou pipefail
          echo "API_GATEWAY_ENDPOINT=${{ github.event.deployment_status.environment_url }}" >> $GITHUB_ENV

      - name: Update depyloment uri (from latest deployment)
        if: ${{ github.event_name == 'push' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -exou pipefail

          # Iterate over production deployment until we get the latest succeeded deployment id
          while true:
            # Grab latest production deployment id
            LAST_DEPLOYEMNT_ID=$(gh api \
              --header "Accept: application/vnd.github+json" \
              --header "X-GitHub-Api-Version: 2022-11-28" \
              /repos/'${{ github.repository }}'/deployments --jq 'map(select(.environment == "prod"))[0].id')

            STATUS=$(gh api \
              --header "Accept: application/vnd.github+json" \
              --header "X-GitHub-Api-Version: 2022-11-28" \
              /repos/'${{ github.repository }}'/deployments/"${LAST_DEPLOYEMNT_ID}"/statuses --jq 'map(select(.state == "success")) | .[].environment_url')


          API_GATEWAY_ENDPOINT=$(gh api \
            --header "Accept: application/vnd.github+json" \
            --header "X-GitHub-Api-Version: 2022-11-28" \
            /repos/'${{ github.repository }}'/deployments --jq 'map(select(.environment == "prod"))[0].payload.web_url')

          echo "API_GATEWAY_ENDPOINT=${API_GATEWAY_ENDPOINT}" >> $GITHUB_ENV

      - name: Build React App using update-to-date deployment uri
        run: npm run build

      - name: Deploy to github pages
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site/dist
          user_name: github-pages[bot]
          user_email: github-pages[bot]@users.noreply.github.com
