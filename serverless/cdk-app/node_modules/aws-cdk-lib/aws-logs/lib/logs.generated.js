"use strict";var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnTransformer=exports.CfnLogAnomalyDetector=exports.CfnIntegration=exports.CfnDeliverySource=exports.CfnDeliveryDestination=exports.CfnDelivery=exports.CfnSubscriptionFilter=exports.CfnResourcePolicy=exports.CfnQueryDefinition=exports.CfnMetricFilter=exports.CfnLogStream=exports.CfnLogGroup=exports.CfnDestination=exports.CfnAccountPolicy=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var cdk=()=>{var tmp=require("../../core");return cdk=()=>tmp,tmp},cfn_parse=()=>{var tmp=require("../../core/lib/helpers-internal");return cfn_parse=()=>tmp,tmp};class CfnAccountPolicy extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnAccountPolicyPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnAccountPolicy(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnAccountPolicy.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnAccountPolicyProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnAccountPolicy),error}cdk().requireProperty(props,"policyDocument",this),cdk().requireProperty(props,"policyName",this),cdk().requireProperty(props,"policyType",this),this.attrAccountId=cdk().Token.asString(this.getAtt("AccountId",cdk().ResolutionTypeHint.STRING)),this.policyDocument=props.policyDocument,this.policyName=props.policyName,this.policyType=props.policyType,this.scope=props.scope,this.selectionCriteria=props.selectionCriteria}get cfnProperties(){return{policyDocument:this.policyDocument,policyName:this.policyName,policyType:this.policyType,scope:this.scope,selectionCriteria:this.selectionCriteria}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnAccountPolicy.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnAccountPolicyPropsToCloudFormation(props)}}exports.CfnAccountPolicy=CfnAccountPolicy,_a=JSII_RTTI_SYMBOL_1,CfnAccountPolicy[_a]={fqn:"aws-cdk-lib.aws_logs.CfnAccountPolicy",version:"2.176.0"},CfnAccountPolicy.CFN_RESOURCE_TYPE_NAME="AWS::Logs::AccountPolicy";function CfnAccountPolicyPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("policyDocument",cdk().requiredValidator)(properties.policyDocument)),errors.collect(cdk().propertyValidator("policyDocument",cdk().validateString)(properties.policyDocument)),errors.collect(cdk().propertyValidator("policyName",cdk().requiredValidator)(properties.policyName)),errors.collect(cdk().propertyValidator("policyName",cdk().validateString)(properties.policyName)),errors.collect(cdk().propertyValidator("policyType",cdk().requiredValidator)(properties.policyType)),errors.collect(cdk().propertyValidator("policyType",cdk().validateString)(properties.policyType)),errors.collect(cdk().propertyValidator("scope",cdk().validateString)(properties.scope)),errors.collect(cdk().propertyValidator("selectionCriteria",cdk().validateString)(properties.selectionCriteria)),errors.wrap('supplied properties not correct for "CfnAccountPolicyProps"')}function convertCfnAccountPolicyPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnAccountPolicyPropsValidator(properties).assertSuccess(),{PolicyDocument:cdk().stringToCloudFormation(properties.policyDocument),PolicyName:cdk().stringToCloudFormation(properties.policyName),PolicyType:cdk().stringToCloudFormation(properties.policyType),Scope:cdk().stringToCloudFormation(properties.scope),SelectionCriteria:cdk().stringToCloudFormation(properties.selectionCriteria)}):properties}function CfnAccountPolicyPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("policyDocument","PolicyDocument",properties.PolicyDocument!=null?cfn_parse().FromCloudFormation.getString(properties.PolicyDocument):void 0),ret.addPropertyResult("policyName","PolicyName",properties.PolicyName!=null?cfn_parse().FromCloudFormation.getString(properties.PolicyName):void 0),ret.addPropertyResult("policyType","PolicyType",properties.PolicyType!=null?cfn_parse().FromCloudFormation.getString(properties.PolicyType):void 0),ret.addPropertyResult("scope","Scope",properties.Scope!=null?cfn_parse().FromCloudFormation.getString(properties.Scope):void 0),ret.addPropertyResult("selectionCriteria","SelectionCriteria",properties.SelectionCriteria!=null?cfn_parse().FromCloudFormation.getString(properties.SelectionCriteria):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDestination extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDestinationPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDestination(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDestination.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnDestinationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDestination),error}cdk().requireProperty(props,"destinationName",this),cdk().requireProperty(props,"roleArn",this),cdk().requireProperty(props,"targetArn",this),this.attrArn=cdk().Token.asString(this.getAtt("Arn",cdk().ResolutionTypeHint.STRING)),this.destinationName=props.destinationName,this.destinationPolicy=props.destinationPolicy,this.roleArn=props.roleArn,this.targetArn=props.targetArn}get cfnProperties(){return{destinationName:this.destinationName,destinationPolicy:this.destinationPolicy,roleArn:this.roleArn,targetArn:this.targetArn}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDestination.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDestinationPropsToCloudFormation(props)}}exports.CfnDestination=CfnDestination,_b=JSII_RTTI_SYMBOL_1,CfnDestination[_b]={fqn:"aws-cdk-lib.aws_logs.CfnDestination",version:"2.176.0"},CfnDestination.CFN_RESOURCE_TYPE_NAME="AWS::Logs::Destination";function CfnDestinationPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("destinationName",cdk().requiredValidator)(properties.destinationName)),errors.collect(cdk().propertyValidator("destinationName",cdk().validateString)(properties.destinationName)),errors.collect(cdk().propertyValidator("destinationPolicy",cdk().validateString)(properties.destinationPolicy)),errors.collect(cdk().propertyValidator("roleArn",cdk().requiredValidator)(properties.roleArn)),errors.collect(cdk().propertyValidator("roleArn",cdk().validateString)(properties.roleArn)),errors.collect(cdk().propertyValidator("targetArn",cdk().requiredValidator)(properties.targetArn)),errors.collect(cdk().propertyValidator("targetArn",cdk().validateString)(properties.targetArn)),errors.wrap('supplied properties not correct for "CfnDestinationProps"')}function convertCfnDestinationPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnDestinationPropsValidator(properties).assertSuccess(),{DestinationName:cdk().stringToCloudFormation(properties.destinationName),DestinationPolicy:cdk().stringToCloudFormation(properties.destinationPolicy),RoleArn:cdk().stringToCloudFormation(properties.roleArn),TargetArn:cdk().stringToCloudFormation(properties.targetArn)}):properties}function CfnDestinationPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("destinationName","DestinationName",properties.DestinationName!=null?cfn_parse().FromCloudFormation.getString(properties.DestinationName):void 0),ret.addPropertyResult("destinationPolicy","DestinationPolicy",properties.DestinationPolicy!=null?cfn_parse().FromCloudFormation.getString(properties.DestinationPolicy):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse().FromCloudFormation.getString(properties.RoleArn):void 0),ret.addPropertyResult("targetArn","TargetArn",properties.TargetArn!=null?cfn_parse().FromCloudFormation.getString(properties.TargetArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLogGroup extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLogGroupPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnLogGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnLogGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnLogGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnLogGroup),error}this.attrArn=cdk().Token.asString(this.getAtt("Arn",cdk().ResolutionTypeHint.STRING)),this.dataProtectionPolicy=props.dataProtectionPolicy,this.fieldIndexPolicies=props.fieldIndexPolicies,this.kmsKeyId=props.kmsKeyId,this.logGroupClass=props.logGroupClass,this.logGroupName=props.logGroupName,this.retentionInDays=props.retentionInDays,this.tags=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::Logs::LogGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.node.scope!=null&&cdk().Resource.isResource(this.node.scope)&&this.node.addValidation({validate:()=>this.cfnOptions.deletionPolicy===void 0?["'AWS::Logs::LogGroup' is a stateful resource type, and you must specify a Removal Policy for it. Call 'resource.applyRemovalPolicy()'."]:[]})}get cfnProperties(){return{dataProtectionPolicy:this.dataProtectionPolicy,fieldIndexPolicies:this.fieldIndexPolicies,kmsKeyId:this.kmsKeyId,logGroupClass:this.logGroupClass,logGroupName:this.logGroupName,retentionInDays:this.retentionInDays,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnLogGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnLogGroupPropsToCloudFormation(props)}}exports.CfnLogGroup=CfnLogGroup,_c=JSII_RTTI_SYMBOL_1,CfnLogGroup[_c]={fqn:"aws-cdk-lib.aws_logs.CfnLogGroup",version:"2.176.0"},CfnLogGroup.CFN_RESOURCE_TYPE_NAME="AWS::Logs::LogGroup";function CfnLogGroupPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("dataProtectionPolicy",cdk().validateObject)(properties.dataProtectionPolicy)),errors.collect(cdk().propertyValidator("fieldIndexPolicies",cdk().listValidator(cdk().validateObject))(properties.fieldIndexPolicies)),errors.collect(cdk().propertyValidator("kmsKeyId",cdk().validateString)(properties.kmsKeyId)),errors.collect(cdk().propertyValidator("logGroupClass",cdk().validateString)(properties.logGroupClass)),errors.collect(cdk().propertyValidator("logGroupName",cdk().validateString)(properties.logGroupName)),errors.collect(cdk().propertyValidator("retentionInDays",cdk().validateNumber)(properties.retentionInDays)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnLogGroupProps"')}function convertCfnLogGroupPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnLogGroupPropsValidator(properties).assertSuccess(),{DataProtectionPolicy:cdk().objectToCloudFormation(properties.dataProtectionPolicy),FieldIndexPolicies:cdk().listMapper(cdk().objectToCloudFormation)(properties.fieldIndexPolicies),KmsKeyId:cdk().stringToCloudFormation(properties.kmsKeyId),LogGroupClass:cdk().stringToCloudFormation(properties.logGroupClass),LogGroupName:cdk().stringToCloudFormation(properties.logGroupName),RetentionInDays:cdk().numberToCloudFormation(properties.retentionInDays),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnLogGroupPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("dataProtectionPolicy","DataProtectionPolicy",properties.DataProtectionPolicy!=null?cfn_parse().FromCloudFormation.getAny(properties.DataProtectionPolicy):void 0),ret.addPropertyResult("fieldIndexPolicies","FieldIndexPolicies",properties.FieldIndexPolicies!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getAny)(properties.FieldIndexPolicies):void 0),ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse().FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("logGroupClass","LogGroupClass",properties.LogGroupClass!=null?cfn_parse().FromCloudFormation.getString(properties.LogGroupClass):void 0),ret.addPropertyResult("logGroupName","LogGroupName",properties.LogGroupName!=null?cfn_parse().FromCloudFormation.getString(properties.LogGroupName):void 0),ret.addPropertyResult("retentionInDays","RetentionInDays",properties.RetentionInDays!=null?cfn_parse().FromCloudFormation.getNumber(properties.RetentionInDays):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLogStream extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLogStreamPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnLogStream(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnLogStream.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnLogStreamProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnLogStream),error}cdk().requireProperty(props,"logGroupName",this),this.logGroupName=props.logGroupName,this.logStreamName=props.logStreamName}get cfnProperties(){return{logGroupName:this.logGroupName,logStreamName:this.logStreamName}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnLogStream.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnLogStreamPropsToCloudFormation(props)}}exports.CfnLogStream=CfnLogStream,_d=JSII_RTTI_SYMBOL_1,CfnLogStream[_d]={fqn:"aws-cdk-lib.aws_logs.CfnLogStream",version:"2.176.0"},CfnLogStream.CFN_RESOURCE_TYPE_NAME="AWS::Logs::LogStream";function CfnLogStreamPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("logGroupName",cdk().requiredValidator)(properties.logGroupName)),errors.collect(cdk().propertyValidator("logGroupName",cdk().validateString)(properties.logGroupName)),errors.collect(cdk().propertyValidator("logStreamName",cdk().validateString)(properties.logStreamName)),errors.wrap('supplied properties not correct for "CfnLogStreamProps"')}function convertCfnLogStreamPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnLogStreamPropsValidator(properties).assertSuccess(),{LogGroupName:cdk().stringToCloudFormation(properties.logGroupName),LogStreamName:cdk().stringToCloudFormation(properties.logStreamName)}):properties}function CfnLogStreamPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("logGroupName","LogGroupName",properties.LogGroupName!=null?cfn_parse().FromCloudFormation.getString(properties.LogGroupName):void 0),ret.addPropertyResult("logStreamName","LogStreamName",properties.LogStreamName!=null?cfn_parse().FromCloudFormation.getString(properties.LogStreamName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnMetricFilter extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnMetricFilterPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnMetricFilter(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnMetricFilter.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnMetricFilterProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnMetricFilter),error}cdk().requireProperty(props,"filterPattern",this),cdk().requireProperty(props,"logGroupName",this),cdk().requireProperty(props,"metricTransformations",this),this.applyOnTransformedLogs=props.applyOnTransformedLogs,this.filterName=props.filterName,this.filterPattern=props.filterPattern,this.logGroupName=props.logGroupName,this.metricTransformations=props.metricTransformations}get cfnProperties(){return{applyOnTransformedLogs:this.applyOnTransformedLogs,filterName:this.filterName,filterPattern:this.filterPattern,logGroupName:this.logGroupName,metricTransformations:this.metricTransformations}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnMetricFilter.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnMetricFilterPropsToCloudFormation(props)}}exports.CfnMetricFilter=CfnMetricFilter,_e=JSII_RTTI_SYMBOL_1,CfnMetricFilter[_e]={fqn:"aws-cdk-lib.aws_logs.CfnMetricFilter",version:"2.176.0"},CfnMetricFilter.CFN_RESOURCE_TYPE_NAME="AWS::Logs::MetricFilter";function CfnMetricFilterDimensionPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("key",cdk().requiredValidator)(properties.key)),errors.collect(cdk().propertyValidator("key",cdk().validateString)(properties.key)),errors.collect(cdk().propertyValidator("value",cdk().requiredValidator)(properties.value)),errors.collect(cdk().propertyValidator("value",cdk().validateString)(properties.value)),errors.wrap('supplied properties not correct for "DimensionProperty"')}function convertCfnMetricFilterDimensionPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnMetricFilterDimensionPropertyValidator(properties).assertSuccess(),{Key:cdk().stringToCloudFormation(properties.key),Value:cdk().stringToCloudFormation(properties.value)}):properties}function CfnMetricFilterDimensionPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",properties.Key!=null?cfn_parse().FromCloudFormation.getString(properties.Key):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse().FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnMetricFilterMetricTransformationPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("defaultValue",cdk().validateNumber)(properties.defaultValue)),errors.collect(cdk().propertyValidator("dimensions",cdk().listValidator(CfnMetricFilterDimensionPropertyValidator))(properties.dimensions)),errors.collect(cdk().propertyValidator("metricName",cdk().requiredValidator)(properties.metricName)),errors.collect(cdk().propertyValidator("metricName",cdk().validateString)(properties.metricName)),errors.collect(cdk().propertyValidator("metricNamespace",cdk().requiredValidator)(properties.metricNamespace)),errors.collect(cdk().propertyValidator("metricNamespace",cdk().validateString)(properties.metricNamespace)),errors.collect(cdk().propertyValidator("metricValue",cdk().requiredValidator)(properties.metricValue)),errors.collect(cdk().propertyValidator("metricValue",cdk().validateString)(properties.metricValue)),errors.collect(cdk().propertyValidator("unit",cdk().validateString)(properties.unit)),errors.wrap('supplied properties not correct for "MetricTransformationProperty"')}function convertCfnMetricFilterMetricTransformationPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnMetricFilterMetricTransformationPropertyValidator(properties).assertSuccess(),{DefaultValue:cdk().numberToCloudFormation(properties.defaultValue),Dimensions:cdk().listMapper(convertCfnMetricFilterDimensionPropertyToCloudFormation)(properties.dimensions),MetricName:cdk().stringToCloudFormation(properties.metricName),MetricNamespace:cdk().stringToCloudFormation(properties.metricNamespace),MetricValue:cdk().stringToCloudFormation(properties.metricValue),Unit:cdk().stringToCloudFormation(properties.unit)}):properties}function CfnMetricFilterMetricTransformationPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("defaultValue","DefaultValue",properties.DefaultValue!=null?cfn_parse().FromCloudFormation.getNumber(properties.DefaultValue):void 0),ret.addPropertyResult("dimensions","Dimensions",properties.Dimensions!=null?cfn_parse().FromCloudFormation.getArray(CfnMetricFilterDimensionPropertyFromCloudFormation)(properties.Dimensions):void 0),ret.addPropertyResult("metricName","MetricName",properties.MetricName!=null?cfn_parse().FromCloudFormation.getString(properties.MetricName):void 0),ret.addPropertyResult("metricNamespace","MetricNamespace",properties.MetricNamespace!=null?cfn_parse().FromCloudFormation.getString(properties.MetricNamespace):void 0),ret.addPropertyResult("metricValue","MetricValue",properties.MetricValue!=null?cfn_parse().FromCloudFormation.getString(properties.MetricValue):void 0),ret.addPropertyResult("unit","Unit",properties.Unit!=null?cfn_parse().FromCloudFormation.getString(properties.Unit):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnMetricFilterPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("applyOnTransformedLogs",cdk().validateBoolean)(properties.applyOnTransformedLogs)),errors.collect(cdk().propertyValidator("filterName",cdk().validateString)(properties.filterName)),errors.collect(cdk().propertyValidator("filterPattern",cdk().requiredValidator)(properties.filterPattern)),errors.collect(cdk().propertyValidator("filterPattern",cdk().validateString)(properties.filterPattern)),errors.collect(cdk().propertyValidator("logGroupName",cdk().requiredValidator)(properties.logGroupName)),errors.collect(cdk().propertyValidator("logGroupName",cdk().validateString)(properties.logGroupName)),errors.collect(cdk().propertyValidator("metricTransformations",cdk().requiredValidator)(properties.metricTransformations)),errors.collect(cdk().propertyValidator("metricTransformations",cdk().listValidator(CfnMetricFilterMetricTransformationPropertyValidator))(properties.metricTransformations)),errors.wrap('supplied properties not correct for "CfnMetricFilterProps"')}function convertCfnMetricFilterPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnMetricFilterPropsValidator(properties).assertSuccess(),{ApplyOnTransformedLogs:cdk().booleanToCloudFormation(properties.applyOnTransformedLogs),FilterName:cdk().stringToCloudFormation(properties.filterName),FilterPattern:cdk().stringToCloudFormation(properties.filterPattern),LogGroupName:cdk().stringToCloudFormation(properties.logGroupName),MetricTransformations:cdk().listMapper(convertCfnMetricFilterMetricTransformationPropertyToCloudFormation)(properties.metricTransformations)}):properties}function CfnMetricFilterPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("applyOnTransformedLogs","ApplyOnTransformedLogs",properties.ApplyOnTransformedLogs!=null?cfn_parse().FromCloudFormation.getBoolean(properties.ApplyOnTransformedLogs):void 0),ret.addPropertyResult("filterName","FilterName",properties.FilterName!=null?cfn_parse().FromCloudFormation.getString(properties.FilterName):void 0),ret.addPropertyResult("filterPattern","FilterPattern",properties.FilterPattern!=null?cfn_parse().FromCloudFormation.getString(properties.FilterPattern):void 0),ret.addPropertyResult("logGroupName","LogGroupName",properties.LogGroupName!=null?cfn_parse().FromCloudFormation.getString(properties.LogGroupName):void 0),ret.addPropertyResult("metricTransformations","MetricTransformations",properties.MetricTransformations!=null?cfn_parse().FromCloudFormation.getArray(CfnMetricFilterMetricTransformationPropertyFromCloudFormation)(properties.MetricTransformations):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnQueryDefinition extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnQueryDefinitionPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnQueryDefinition(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnQueryDefinition.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnQueryDefinitionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnQueryDefinition),error}cdk().requireProperty(props,"name",this),cdk().requireProperty(props,"queryString",this),this.attrQueryDefinitionId=cdk().Token.asString(this.getAtt("QueryDefinitionId",cdk().ResolutionTypeHint.STRING)),this.logGroupNames=props.logGroupNames,this.name=props.name,this.queryLanguage=props.queryLanguage,this.queryString=props.queryString}get cfnProperties(){return{logGroupNames:this.logGroupNames,name:this.name,queryLanguage:this.queryLanguage,queryString:this.queryString}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnQueryDefinition.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnQueryDefinitionPropsToCloudFormation(props)}}exports.CfnQueryDefinition=CfnQueryDefinition,_f=JSII_RTTI_SYMBOL_1,CfnQueryDefinition[_f]={fqn:"aws-cdk-lib.aws_logs.CfnQueryDefinition",version:"2.176.0"},CfnQueryDefinition.CFN_RESOURCE_TYPE_NAME="AWS::Logs::QueryDefinition";function CfnQueryDefinitionPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("logGroupNames",cdk().listValidator(cdk().validateString))(properties.logGroupNames)),errors.collect(cdk().propertyValidator("name",cdk().requiredValidator)(properties.name)),errors.collect(cdk().propertyValidator("name",cdk().validateString)(properties.name)),errors.collect(cdk().propertyValidator("queryLanguage",cdk().validateString)(properties.queryLanguage)),errors.collect(cdk().propertyValidator("queryString",cdk().requiredValidator)(properties.queryString)),errors.collect(cdk().propertyValidator("queryString",cdk().validateString)(properties.queryString)),errors.wrap('supplied properties not correct for "CfnQueryDefinitionProps"')}function convertCfnQueryDefinitionPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnQueryDefinitionPropsValidator(properties).assertSuccess(),{LogGroupNames:cdk().listMapper(cdk().stringToCloudFormation)(properties.logGroupNames),Name:cdk().stringToCloudFormation(properties.name),QueryLanguage:cdk().stringToCloudFormation(properties.queryLanguage),QueryString:cdk().stringToCloudFormation(properties.queryString)}):properties}function CfnQueryDefinitionPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("logGroupNames","LogGroupNames",properties.LogGroupNames!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.LogGroupNames):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse().FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("queryLanguage","QueryLanguage",properties.QueryLanguage!=null?cfn_parse().FromCloudFormation.getString(properties.QueryLanguage):void 0),ret.addPropertyResult("queryString","QueryString",properties.QueryString!=null?cfn_parse().FromCloudFormation.getString(properties.QueryString):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnResourcePolicy extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnResourcePolicyPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnResourcePolicy(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnResourcePolicy.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnResourcePolicyProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnResourcePolicy),error}cdk().requireProperty(props,"policyDocument",this),cdk().requireProperty(props,"policyName",this),this.policyDocument=props.policyDocument,this.policyName=props.policyName}get cfnProperties(){return{policyDocument:this.policyDocument,policyName:this.policyName}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnResourcePolicy.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnResourcePolicyPropsToCloudFormation(props)}}exports.CfnResourcePolicy=CfnResourcePolicy,_g=JSII_RTTI_SYMBOL_1,CfnResourcePolicy[_g]={fqn:"aws-cdk-lib.aws_logs.CfnResourcePolicy",version:"2.176.0"},CfnResourcePolicy.CFN_RESOURCE_TYPE_NAME="AWS::Logs::ResourcePolicy";function CfnResourcePolicyPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("policyDocument",cdk().requiredValidator)(properties.policyDocument)),errors.collect(cdk().propertyValidator("policyDocument",cdk().validateString)(properties.policyDocument)),errors.collect(cdk().propertyValidator("policyName",cdk().requiredValidator)(properties.policyName)),errors.collect(cdk().propertyValidator("policyName",cdk().validateString)(properties.policyName)),errors.wrap('supplied properties not correct for "CfnResourcePolicyProps"')}function convertCfnResourcePolicyPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnResourcePolicyPropsValidator(properties).assertSuccess(),{PolicyDocument:cdk().stringToCloudFormation(properties.policyDocument),PolicyName:cdk().stringToCloudFormation(properties.policyName)}):properties}function CfnResourcePolicyPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("policyDocument","PolicyDocument",properties.PolicyDocument!=null?cfn_parse().FromCloudFormation.getString(properties.PolicyDocument):void 0),ret.addPropertyResult("policyName","PolicyName",properties.PolicyName!=null?cfn_parse().FromCloudFormation.getString(properties.PolicyName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnSubscriptionFilter extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnSubscriptionFilterPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnSubscriptionFilter(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnSubscriptionFilter.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnSubscriptionFilterProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnSubscriptionFilter),error}cdk().requireProperty(props,"destinationArn",this),cdk().requireProperty(props,"filterPattern",this),cdk().requireProperty(props,"logGroupName",this),this.applyOnTransformedLogs=props.applyOnTransformedLogs,this.destinationArn=props.destinationArn,this.distribution=props.distribution,this.filterName=props.filterName,this.filterPattern=props.filterPattern,this.logGroupName=props.logGroupName,this.roleArn=props.roleArn}get cfnProperties(){return{applyOnTransformedLogs:this.applyOnTransformedLogs,destinationArn:this.destinationArn,distribution:this.distribution,filterName:this.filterName,filterPattern:this.filterPattern,logGroupName:this.logGroupName,roleArn:this.roleArn}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnSubscriptionFilter.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnSubscriptionFilterPropsToCloudFormation(props)}}exports.CfnSubscriptionFilter=CfnSubscriptionFilter,_h=JSII_RTTI_SYMBOL_1,CfnSubscriptionFilter[_h]={fqn:"aws-cdk-lib.aws_logs.CfnSubscriptionFilter",version:"2.176.0"},CfnSubscriptionFilter.CFN_RESOURCE_TYPE_NAME="AWS::Logs::SubscriptionFilter";function CfnSubscriptionFilterPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("applyOnTransformedLogs",cdk().validateBoolean)(properties.applyOnTransformedLogs)),errors.collect(cdk().propertyValidator("destinationArn",cdk().requiredValidator)(properties.destinationArn)),errors.collect(cdk().propertyValidator("destinationArn",cdk().validateString)(properties.destinationArn)),errors.collect(cdk().propertyValidator("distribution",cdk().validateString)(properties.distribution)),errors.collect(cdk().propertyValidator("filterName",cdk().validateString)(properties.filterName)),errors.collect(cdk().propertyValidator("filterPattern",cdk().requiredValidator)(properties.filterPattern)),errors.collect(cdk().propertyValidator("filterPattern",cdk().validateString)(properties.filterPattern)),errors.collect(cdk().propertyValidator("logGroupName",cdk().requiredValidator)(properties.logGroupName)),errors.collect(cdk().propertyValidator("logGroupName",cdk().validateString)(properties.logGroupName)),errors.collect(cdk().propertyValidator("roleArn",cdk().validateString)(properties.roleArn)),errors.wrap('supplied properties not correct for "CfnSubscriptionFilterProps"')}function convertCfnSubscriptionFilterPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnSubscriptionFilterPropsValidator(properties).assertSuccess(),{ApplyOnTransformedLogs:cdk().booleanToCloudFormation(properties.applyOnTransformedLogs),DestinationArn:cdk().stringToCloudFormation(properties.destinationArn),Distribution:cdk().stringToCloudFormation(properties.distribution),FilterName:cdk().stringToCloudFormation(properties.filterName),FilterPattern:cdk().stringToCloudFormation(properties.filterPattern),LogGroupName:cdk().stringToCloudFormation(properties.logGroupName),RoleArn:cdk().stringToCloudFormation(properties.roleArn)}):properties}function CfnSubscriptionFilterPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("applyOnTransformedLogs","ApplyOnTransformedLogs",properties.ApplyOnTransformedLogs!=null?cfn_parse().FromCloudFormation.getBoolean(properties.ApplyOnTransformedLogs):void 0),ret.addPropertyResult("destinationArn","DestinationArn",properties.DestinationArn!=null?cfn_parse().FromCloudFormation.getString(properties.DestinationArn):void 0),ret.addPropertyResult("distribution","Distribution",properties.Distribution!=null?cfn_parse().FromCloudFormation.getString(properties.Distribution):void 0),ret.addPropertyResult("filterName","FilterName",properties.FilterName!=null?cfn_parse().FromCloudFormation.getString(properties.FilterName):void 0),ret.addPropertyResult("filterPattern","FilterPattern",properties.FilterPattern!=null?cfn_parse().FromCloudFormation.getString(properties.FilterPattern):void 0),ret.addPropertyResult("logGroupName","LogGroupName",properties.LogGroupName!=null?cfn_parse().FromCloudFormation.getString(properties.LogGroupName):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse().FromCloudFormation.getString(properties.RoleArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDelivery extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDeliveryPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDelivery(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDelivery.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnDeliveryProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDelivery),error}cdk().requireProperty(props,"deliveryDestinationArn",this),cdk().requireProperty(props,"deliverySourceName",this),this.attrArn=cdk().Token.asString(this.getAtt("Arn",cdk().ResolutionTypeHint.STRING)),this.attrDeliveryDestinationType=cdk().Token.asString(this.getAtt("DeliveryDestinationType",cdk().ResolutionTypeHint.STRING)),this.attrDeliveryId=cdk().Token.asString(this.getAtt("DeliveryId",cdk().ResolutionTypeHint.STRING)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::Logs::Delivery",void 0,{tagPropertyName:"tags"}),this.deliveryDestinationArn=props.deliveryDestinationArn,this.deliverySourceName=props.deliverySourceName,this.fieldDelimiter=props.fieldDelimiter,this.recordFields=props.recordFields,this.s3EnableHiveCompatiblePath=props.s3EnableHiveCompatiblePath,this.s3SuffixPath=props.s3SuffixPath,this.tags=props.tags}get cfnProperties(){return{tags:this.cdkTagManager.renderTags(this.tags),deliveryDestinationArn:this.deliveryDestinationArn,deliverySourceName:this.deliverySourceName,fieldDelimiter:this.fieldDelimiter,recordFields:this.recordFields,s3EnableHiveCompatiblePath:this.s3EnableHiveCompatiblePath,s3SuffixPath:this.s3SuffixPath}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDelivery.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDeliveryPropsToCloudFormation(props)}}exports.CfnDelivery=CfnDelivery,_j=JSII_RTTI_SYMBOL_1,CfnDelivery[_j]={fqn:"aws-cdk-lib.aws_logs.CfnDelivery",version:"2.176.0"},CfnDelivery.CFN_RESOURCE_TYPE_NAME="AWS::Logs::Delivery";function CfnDeliveryPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("deliveryDestinationArn",cdk().requiredValidator)(properties.deliveryDestinationArn)),errors.collect(cdk().propertyValidator("deliveryDestinationArn",cdk().validateString)(properties.deliveryDestinationArn)),errors.collect(cdk().propertyValidator("deliverySourceName",cdk().requiredValidator)(properties.deliverySourceName)),errors.collect(cdk().propertyValidator("deliverySourceName",cdk().validateString)(properties.deliverySourceName)),errors.collect(cdk().propertyValidator("fieldDelimiter",cdk().validateString)(properties.fieldDelimiter)),errors.collect(cdk().propertyValidator("recordFields",cdk().listValidator(cdk().validateString))(properties.recordFields)),errors.collect(cdk().propertyValidator("s3EnableHiveCompatiblePath",cdk().validateBoolean)(properties.s3EnableHiveCompatiblePath)),errors.collect(cdk().propertyValidator("s3SuffixPath",cdk().validateString)(properties.s3SuffixPath)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDeliveryProps"')}function convertCfnDeliveryPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnDeliveryPropsValidator(properties).assertSuccess(),{DeliveryDestinationArn:cdk().stringToCloudFormation(properties.deliveryDestinationArn),DeliverySourceName:cdk().stringToCloudFormation(properties.deliverySourceName),FieldDelimiter:cdk().stringToCloudFormation(properties.fieldDelimiter),RecordFields:cdk().listMapper(cdk().stringToCloudFormation)(properties.recordFields),S3EnableHiveCompatiblePath:cdk().booleanToCloudFormation(properties.s3EnableHiveCompatiblePath),S3SuffixPath:cdk().stringToCloudFormation(properties.s3SuffixPath),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDeliveryPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("deliveryDestinationArn","DeliveryDestinationArn",properties.DeliveryDestinationArn!=null?cfn_parse().FromCloudFormation.getString(properties.DeliveryDestinationArn):void 0),ret.addPropertyResult("deliverySourceName","DeliverySourceName",properties.DeliverySourceName!=null?cfn_parse().FromCloudFormation.getString(properties.DeliverySourceName):void 0),ret.addPropertyResult("fieldDelimiter","FieldDelimiter",properties.FieldDelimiter!=null?cfn_parse().FromCloudFormation.getString(properties.FieldDelimiter):void 0),ret.addPropertyResult("recordFields","RecordFields",properties.RecordFields!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.RecordFields):void 0),ret.addPropertyResult("s3EnableHiveCompatiblePath","S3EnableHiveCompatiblePath",properties.S3EnableHiveCompatiblePath!=null?cfn_parse().FromCloudFormation.getBoolean(properties.S3EnableHiveCompatiblePath):void 0),ret.addPropertyResult("s3SuffixPath","S3SuffixPath",properties.S3SuffixPath!=null?cfn_parse().FromCloudFormation.getString(properties.S3SuffixPath):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDeliveryDestination extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDeliveryDestinationPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDeliveryDestination(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDeliveryDestination.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnDeliveryDestinationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDeliveryDestination),error}cdk().requireProperty(props,"name",this),this.attrArn=cdk().Token.asString(this.getAtt("Arn",cdk().ResolutionTypeHint.STRING)),this.attrDeliveryDestinationType=cdk().Token.asString(this.getAtt("DeliveryDestinationType",cdk().ResolutionTypeHint.STRING)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::Logs::DeliveryDestination",void 0,{tagPropertyName:"tags"}),this.deliveryDestinationPolicy=props.deliveryDestinationPolicy,this.destinationResourceArn=props.destinationResourceArn,this.name=props.name,this.outputFormat=props.outputFormat,this.tags=props.tags}get cfnProperties(){return{tags:this.cdkTagManager.renderTags(this.tags),deliveryDestinationPolicy:this.deliveryDestinationPolicy,destinationResourceArn:this.destinationResourceArn,name:this.name,outputFormat:this.outputFormat}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDeliveryDestination.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDeliveryDestinationPropsToCloudFormation(props)}}exports.CfnDeliveryDestination=CfnDeliveryDestination,_k=JSII_RTTI_SYMBOL_1,CfnDeliveryDestination[_k]={fqn:"aws-cdk-lib.aws_logs.CfnDeliveryDestination",version:"2.176.0"},CfnDeliveryDestination.CFN_RESOURCE_TYPE_NAME="AWS::Logs::DeliveryDestination";function CfnDeliveryDestinationPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("deliveryDestinationPolicy",cdk().validateObject)(properties.deliveryDestinationPolicy)),errors.collect(cdk().propertyValidator("destinationResourceArn",cdk().validateString)(properties.destinationResourceArn)),errors.collect(cdk().propertyValidator("name",cdk().requiredValidator)(properties.name)),errors.collect(cdk().propertyValidator("name",cdk().validateString)(properties.name)),errors.collect(cdk().propertyValidator("outputFormat",cdk().validateString)(properties.outputFormat)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDeliveryDestinationProps"')}function convertCfnDeliveryDestinationPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnDeliveryDestinationPropsValidator(properties).assertSuccess(),{DeliveryDestinationPolicy:cdk().objectToCloudFormation(properties.deliveryDestinationPolicy),DestinationResourceArn:cdk().stringToCloudFormation(properties.destinationResourceArn),Name:cdk().stringToCloudFormation(properties.name),OutputFormat:cdk().stringToCloudFormation(properties.outputFormat),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDeliveryDestinationPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("deliveryDestinationPolicy","DeliveryDestinationPolicy",properties.DeliveryDestinationPolicy!=null?cfn_parse().FromCloudFormation.getAny(properties.DeliveryDestinationPolicy):void 0),ret.addPropertyResult("destinationResourceArn","DestinationResourceArn",properties.DestinationResourceArn!=null?cfn_parse().FromCloudFormation.getString(properties.DestinationResourceArn):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse().FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("outputFormat","OutputFormat",properties.OutputFormat!=null?cfn_parse().FromCloudFormation.getString(properties.OutputFormat):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDeliverySource extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDeliverySourcePropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDeliverySource(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDeliverySource.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnDeliverySourceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDeliverySource),error}cdk().requireProperty(props,"name",this),this.attrArn=cdk().Token.asString(this.getAtt("Arn",cdk().ResolutionTypeHint.STRING)),this.attrResourceArns=cdk().Token.asList(this.getAtt("ResourceArns",cdk().ResolutionTypeHint.STRING_LIST)),this.attrService=cdk().Token.asString(this.getAtt("Service",cdk().ResolutionTypeHint.STRING)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::Logs::DeliverySource",void 0,{tagPropertyName:"tags"}),this.logType=props.logType,this.name=props.name,this.resourceArn=props.resourceArn,this.tags=props.tags}get cfnProperties(){return{tags:this.cdkTagManager.renderTags(this.tags),logType:this.logType,name:this.name,resourceArn:this.resourceArn}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDeliverySource.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDeliverySourcePropsToCloudFormation(props)}}exports.CfnDeliverySource=CfnDeliverySource,_l=JSII_RTTI_SYMBOL_1,CfnDeliverySource[_l]={fqn:"aws-cdk-lib.aws_logs.CfnDeliverySource",version:"2.176.0"},CfnDeliverySource.CFN_RESOURCE_TYPE_NAME="AWS::Logs::DeliverySource";function CfnDeliverySourcePropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("logType",cdk().validateString)(properties.logType)),errors.collect(cdk().propertyValidator("name",cdk().requiredValidator)(properties.name)),errors.collect(cdk().propertyValidator("name",cdk().validateString)(properties.name)),errors.collect(cdk().propertyValidator("resourceArn",cdk().validateString)(properties.resourceArn)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDeliverySourceProps"')}function convertCfnDeliverySourcePropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnDeliverySourcePropsValidator(properties).assertSuccess(),{LogType:cdk().stringToCloudFormation(properties.logType),Name:cdk().stringToCloudFormation(properties.name),ResourceArn:cdk().stringToCloudFormation(properties.resourceArn),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDeliverySourcePropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("logType","LogType",properties.LogType!=null?cfn_parse().FromCloudFormation.getString(properties.LogType):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse().FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("resourceArn","ResourceArn",properties.ResourceArn!=null?cfn_parse().FromCloudFormation.getString(properties.ResourceArn):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnIntegration extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnIntegrationPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnIntegration(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnIntegration.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnIntegrationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnIntegration),error}cdk().requireProperty(props,"integrationName",this),cdk().requireProperty(props,"integrationType",this),cdk().requireProperty(props,"resourceConfig",this),this.attrIntegrationStatus=cdk().Token.asString(this.getAtt("IntegrationStatus",cdk().ResolutionTypeHint.STRING)),this.integrationName=props.integrationName,this.integrationType=props.integrationType,this.resourceConfig=props.resourceConfig}get cfnProperties(){return{integrationName:this.integrationName,integrationType:this.integrationType,resourceConfig:this.resourceConfig}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnIntegration.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnIntegrationPropsToCloudFormation(props)}}exports.CfnIntegration=CfnIntegration,_m=JSII_RTTI_SYMBOL_1,CfnIntegration[_m]={fqn:"aws-cdk-lib.aws_logs.CfnIntegration",version:"2.176.0"},CfnIntegration.CFN_RESOURCE_TYPE_NAME="AWS::Logs::Integration";function CfnIntegrationOpenSearchResourceConfigPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("applicationArn",cdk().validateString)(properties.applicationArn)),errors.collect(cdk().propertyValidator("dashboardViewerPrincipals",cdk().requiredValidator)(properties.dashboardViewerPrincipals)),errors.collect(cdk().propertyValidator("dashboardViewerPrincipals",cdk().listValidator(cdk().validateString))(properties.dashboardViewerPrincipals)),errors.collect(cdk().propertyValidator("dataSourceRoleArn",cdk().requiredValidator)(properties.dataSourceRoleArn)),errors.collect(cdk().propertyValidator("dataSourceRoleArn",cdk().validateString)(properties.dataSourceRoleArn)),errors.collect(cdk().propertyValidator("kmsKeyArn",cdk().validateString)(properties.kmsKeyArn)),errors.collect(cdk().propertyValidator("retentionDays",cdk().validateNumber)(properties.retentionDays)),errors.wrap('supplied properties not correct for "OpenSearchResourceConfigProperty"')}function convertCfnIntegrationOpenSearchResourceConfigPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnIntegrationOpenSearchResourceConfigPropertyValidator(properties).assertSuccess(),{ApplicationARN:cdk().stringToCloudFormation(properties.applicationArn),DashboardViewerPrincipals:cdk().listMapper(cdk().stringToCloudFormation)(properties.dashboardViewerPrincipals),DataSourceRoleArn:cdk().stringToCloudFormation(properties.dataSourceRoleArn),KmsKeyArn:cdk().stringToCloudFormation(properties.kmsKeyArn),RetentionDays:cdk().numberToCloudFormation(properties.retentionDays)}):properties}function CfnIntegrationOpenSearchResourceConfigPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("applicationArn","ApplicationARN",properties.ApplicationARN!=null?cfn_parse().FromCloudFormation.getString(properties.ApplicationARN):void 0),ret.addPropertyResult("dashboardViewerPrincipals","DashboardViewerPrincipals",properties.DashboardViewerPrincipals!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.DashboardViewerPrincipals):void 0),ret.addPropertyResult("dataSourceRoleArn","DataSourceRoleArn",properties.DataSourceRoleArn!=null?cfn_parse().FromCloudFormation.getString(properties.DataSourceRoleArn):void 0),ret.addPropertyResult("kmsKeyArn","KmsKeyArn",properties.KmsKeyArn!=null?cfn_parse().FromCloudFormation.getString(properties.KmsKeyArn):void 0),ret.addPropertyResult("retentionDays","RetentionDays",properties.RetentionDays!=null?cfn_parse().FromCloudFormation.getNumber(properties.RetentionDays):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnIntegrationResourceConfigPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("openSearchResourceConfig",CfnIntegrationOpenSearchResourceConfigPropertyValidator)(properties.openSearchResourceConfig)),errors.wrap('supplied properties not correct for "ResourceConfigProperty"')}function convertCfnIntegrationResourceConfigPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnIntegrationResourceConfigPropertyValidator(properties).assertSuccess(),{OpenSearchResourceConfig:convertCfnIntegrationOpenSearchResourceConfigPropertyToCloudFormation(properties.openSearchResourceConfig)}):properties}function CfnIntegrationResourceConfigPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("openSearchResourceConfig","OpenSearchResourceConfig",properties.OpenSearchResourceConfig!=null?CfnIntegrationOpenSearchResourceConfigPropertyFromCloudFormation(properties.OpenSearchResourceConfig):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnIntegrationPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("integrationName",cdk().requiredValidator)(properties.integrationName)),errors.collect(cdk().propertyValidator("integrationName",cdk().validateString)(properties.integrationName)),errors.collect(cdk().propertyValidator("integrationType",cdk().requiredValidator)(properties.integrationType)),errors.collect(cdk().propertyValidator("integrationType",cdk().validateString)(properties.integrationType)),errors.collect(cdk().propertyValidator("resourceConfig",cdk().requiredValidator)(properties.resourceConfig)),errors.collect(cdk().propertyValidator("resourceConfig",CfnIntegrationResourceConfigPropertyValidator)(properties.resourceConfig)),errors.wrap('supplied properties not correct for "CfnIntegrationProps"')}function convertCfnIntegrationPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnIntegrationPropsValidator(properties).assertSuccess(),{IntegrationName:cdk().stringToCloudFormation(properties.integrationName),IntegrationType:cdk().stringToCloudFormation(properties.integrationType),ResourceConfig:convertCfnIntegrationResourceConfigPropertyToCloudFormation(properties.resourceConfig)}):properties}function CfnIntegrationPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("integrationName","IntegrationName",properties.IntegrationName!=null?cfn_parse().FromCloudFormation.getString(properties.IntegrationName):void 0),ret.addPropertyResult("integrationType","IntegrationType",properties.IntegrationType!=null?cfn_parse().FromCloudFormation.getString(properties.IntegrationType):void 0),ret.addPropertyResult("resourceConfig","ResourceConfig",properties.ResourceConfig!=null?CfnIntegrationResourceConfigPropertyFromCloudFormation(properties.ResourceConfig):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLogAnomalyDetector extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLogAnomalyDetectorPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnLogAnomalyDetector(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnLogAnomalyDetector.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnLogAnomalyDetectorProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnLogAnomalyDetector),error}this.attrAnomalyDetectorArn=cdk().Token.asString(this.getAtt("AnomalyDetectorArn",cdk().ResolutionTypeHint.STRING)),this.attrAnomalyDetectorStatus=cdk().Token.asString(this.getAtt("AnomalyDetectorStatus",cdk().ResolutionTypeHint.STRING)),this.attrCreationTimeStamp=this.getAtt("CreationTimeStamp",cdk().ResolutionTypeHint.NUMBER),this.attrLastModifiedTimeStamp=this.getAtt("LastModifiedTimeStamp",cdk().ResolutionTypeHint.NUMBER),this.accountId=props.accountId,this.anomalyVisibilityTime=props.anomalyVisibilityTime,this.detectorName=props.detectorName,this.evaluationFrequency=props.evaluationFrequency,this.filterPattern=props.filterPattern,this.kmsKeyId=props.kmsKeyId,this.logGroupArnList=props.logGroupArnList}get cfnProperties(){return{accountId:this.accountId,anomalyVisibilityTime:this.anomalyVisibilityTime,detectorName:this.detectorName,evaluationFrequency:this.evaluationFrequency,filterPattern:this.filterPattern,kmsKeyId:this.kmsKeyId,logGroupArnList:this.logGroupArnList}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnLogAnomalyDetector.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnLogAnomalyDetectorPropsToCloudFormation(props)}}exports.CfnLogAnomalyDetector=CfnLogAnomalyDetector,_o=JSII_RTTI_SYMBOL_1,CfnLogAnomalyDetector[_o]={fqn:"aws-cdk-lib.aws_logs.CfnLogAnomalyDetector",version:"2.176.0"},CfnLogAnomalyDetector.CFN_RESOURCE_TYPE_NAME="AWS::Logs::LogAnomalyDetector";function CfnLogAnomalyDetectorPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("accountId",cdk().validateString)(properties.accountId)),errors.collect(cdk().propertyValidator("anomalyVisibilityTime",cdk().validateNumber)(properties.anomalyVisibilityTime)),errors.collect(cdk().propertyValidator("detectorName",cdk().validateString)(properties.detectorName)),errors.collect(cdk().propertyValidator("evaluationFrequency",cdk().validateString)(properties.evaluationFrequency)),errors.collect(cdk().propertyValidator("filterPattern",cdk().validateString)(properties.filterPattern)),errors.collect(cdk().propertyValidator("kmsKeyId",cdk().validateString)(properties.kmsKeyId)),errors.collect(cdk().propertyValidator("logGroupArnList",cdk().listValidator(cdk().validateString))(properties.logGroupArnList)),errors.wrap('supplied properties not correct for "CfnLogAnomalyDetectorProps"')}function convertCfnLogAnomalyDetectorPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnLogAnomalyDetectorPropsValidator(properties).assertSuccess(),{AccountId:cdk().stringToCloudFormation(properties.accountId),AnomalyVisibilityTime:cdk().numberToCloudFormation(properties.anomalyVisibilityTime),DetectorName:cdk().stringToCloudFormation(properties.detectorName),EvaluationFrequency:cdk().stringToCloudFormation(properties.evaluationFrequency),FilterPattern:cdk().stringToCloudFormation(properties.filterPattern),KmsKeyId:cdk().stringToCloudFormation(properties.kmsKeyId),LogGroupArnList:cdk().listMapper(cdk().stringToCloudFormation)(properties.logGroupArnList)}):properties}function CfnLogAnomalyDetectorPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("accountId","AccountId",properties.AccountId!=null?cfn_parse().FromCloudFormation.getString(properties.AccountId):void 0),ret.addPropertyResult("anomalyVisibilityTime","AnomalyVisibilityTime",properties.AnomalyVisibilityTime!=null?cfn_parse().FromCloudFormation.getNumber(properties.AnomalyVisibilityTime):void 0),ret.addPropertyResult("detectorName","DetectorName",properties.DetectorName!=null?cfn_parse().FromCloudFormation.getString(properties.DetectorName):void 0),ret.addPropertyResult("evaluationFrequency","EvaluationFrequency",properties.EvaluationFrequency!=null?cfn_parse().FromCloudFormation.getString(properties.EvaluationFrequency):void 0),ret.addPropertyResult("filterPattern","FilterPattern",properties.FilterPattern!=null?cfn_parse().FromCloudFormation.getString(properties.FilterPattern):void 0),ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse().FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("logGroupArnList","LogGroupArnList",properties.LogGroupArnList!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.LogGroupArnList):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnTransformer extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTransformerPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnTransformer(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnTransformer.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_CfnTransformerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnTransformer),error}cdk().requireProperty(props,"logGroupIdentifier",this),cdk().requireProperty(props,"transformerConfig",this),this.logGroupIdentifier=props.logGroupIdentifier,this.transformerConfig=props.transformerConfig}get cfnProperties(){return{logGroupIdentifier:this.logGroupIdentifier,transformerConfig:this.transformerConfig}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnTransformer.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnTransformerPropsToCloudFormation(props)}}exports.CfnTransformer=CfnTransformer,_p=JSII_RTTI_SYMBOL_1,CfnTransformer[_p]={fqn:"aws-cdk-lib.aws_logs.CfnTransformer",version:"2.176.0"},CfnTransformer.CFN_RESOURCE_TYPE_NAME="AWS::Logs::Transformer";function CfnTransformerParseCloudfrontPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.wrap('supplied properties not correct for "ParseCloudfrontProperty"')}function convertCfnTransformerParseCloudfrontPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerParseCloudfrontPropertyValidator(properties).assertSuccess(),{Source:cdk().stringToCloudFormation(properties.source)}):properties}function CfnTransformerParseCloudfrontPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerParseVPCPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.wrap('supplied properties not correct for "ParseVPCProperty"')}function convertCfnTransformerParseVPCPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerParseVPCPropertyValidator(properties).assertSuccess(),{Source:cdk().stringToCloudFormation(properties.source)}):properties}function CfnTransformerParseVPCPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerParseWAFPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.wrap('supplied properties not correct for "ParseWAFProperty"')}function convertCfnTransformerParseWAFPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerParseWAFPropertyValidator(properties).assertSuccess(),{Source:cdk().stringToCloudFormation(properties.source)}):properties}function CfnTransformerParseWAFPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerParseJSONPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("destination",cdk().validateString)(properties.destination)),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.wrap('supplied properties not correct for "ParseJSONProperty"')}function convertCfnTransformerParseJSONPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerParseJSONPropertyValidator(properties).assertSuccess(),{Destination:cdk().stringToCloudFormation(properties.destination),Source:cdk().stringToCloudFormation(properties.source)}):properties}function CfnTransformerParseJSONPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("destination","Destination",properties.Destination!=null?cfn_parse().FromCloudFormation.getString(properties.Destination):void 0),ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerParseRoute53PropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.wrap('supplied properties not correct for "ParseRoute53Property"')}function convertCfnTransformerParseRoute53PropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerParseRoute53PropertyValidator(properties).assertSuccess(),{Source:cdk().stringToCloudFormation(properties.source)}):properties}function CfnTransformerParseRoute53PropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerParsePostgresPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.wrap('supplied properties not correct for "ParsePostgresProperty"')}function convertCfnTransformerParsePostgresPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerParsePostgresPropertyValidator(properties).assertSuccess(),{Source:cdk().stringToCloudFormation(properties.source)}):properties}function CfnTransformerParsePostgresPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerParseKeyValuePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("destination",cdk().validateString)(properties.destination)),errors.collect(cdk().propertyValidator("fieldDelimiter",cdk().validateString)(properties.fieldDelimiter)),errors.collect(cdk().propertyValidator("keyPrefix",cdk().validateString)(properties.keyPrefix)),errors.collect(cdk().propertyValidator("keyValueDelimiter",cdk().validateString)(properties.keyValueDelimiter)),errors.collect(cdk().propertyValidator("nonMatchValue",cdk().validateString)(properties.nonMatchValue)),errors.collect(cdk().propertyValidator("overwriteIfExists",cdk().validateBoolean)(properties.overwriteIfExists)),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.wrap('supplied properties not correct for "ParseKeyValueProperty"')}function convertCfnTransformerParseKeyValuePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerParseKeyValuePropertyValidator(properties).assertSuccess(),{Destination:cdk().stringToCloudFormation(properties.destination),FieldDelimiter:cdk().stringToCloudFormation(properties.fieldDelimiter),KeyPrefix:cdk().stringToCloudFormation(properties.keyPrefix),KeyValueDelimiter:cdk().stringToCloudFormation(properties.keyValueDelimiter),NonMatchValue:cdk().stringToCloudFormation(properties.nonMatchValue),OverwriteIfExists:cdk().booleanToCloudFormation(properties.overwriteIfExists),Source:cdk().stringToCloudFormation(properties.source)}):properties}function CfnTransformerParseKeyValuePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("destination","Destination",properties.Destination!=null?cfn_parse().FromCloudFormation.getString(properties.Destination):void 0),ret.addPropertyResult("fieldDelimiter","FieldDelimiter",properties.FieldDelimiter!=null?cfn_parse().FromCloudFormation.getString(properties.FieldDelimiter):void 0),ret.addPropertyResult("keyPrefix","KeyPrefix",properties.KeyPrefix!=null?cfn_parse().FromCloudFormation.getString(properties.KeyPrefix):void 0),ret.addPropertyResult("keyValueDelimiter","KeyValueDelimiter",properties.KeyValueDelimiter!=null?cfn_parse().FromCloudFormation.getString(properties.KeyValueDelimiter):void 0),ret.addPropertyResult("nonMatchValue","NonMatchValue",properties.NonMatchValue!=null?cfn_parse().FromCloudFormation.getString(properties.NonMatchValue):void 0),ret.addPropertyResult("overwriteIfExists","OverwriteIfExists",properties.OverwriteIfExists!=null?cfn_parse().FromCloudFormation.getBoolean(properties.OverwriteIfExists):void 0),ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerCopyValueEntryPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("overwriteIfExists",cdk().validateBoolean)(properties.overwriteIfExists)),errors.collect(cdk().propertyValidator("source",cdk().requiredValidator)(properties.source)),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.collect(cdk().propertyValidator("target",cdk().requiredValidator)(properties.target)),errors.collect(cdk().propertyValidator("target",cdk().validateString)(properties.target)),errors.wrap('supplied properties not correct for "CopyValueEntryProperty"')}function convertCfnTransformerCopyValueEntryPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerCopyValueEntryPropertyValidator(properties).assertSuccess(),{OverwriteIfExists:cdk().booleanToCloudFormation(properties.overwriteIfExists),Source:cdk().stringToCloudFormation(properties.source),Target:cdk().stringToCloudFormation(properties.target)}):properties}function CfnTransformerCopyValueEntryPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("overwriteIfExists","OverwriteIfExists",properties.OverwriteIfExists!=null?cfn_parse().FromCloudFormation.getBoolean(properties.OverwriteIfExists):void 0),ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addPropertyResult("target","Target",properties.Target!=null?cfn_parse().FromCloudFormation.getString(properties.Target):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerCopyValuePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("entries",cdk().requiredValidator)(properties.entries)),errors.collect(cdk().propertyValidator("entries",cdk().listValidator(CfnTransformerCopyValueEntryPropertyValidator))(properties.entries)),errors.wrap('supplied properties not correct for "CopyValueProperty"')}function convertCfnTransformerCopyValuePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerCopyValuePropertyValidator(properties).assertSuccess(),{Entries:cdk().listMapper(convertCfnTransformerCopyValueEntryPropertyToCloudFormation)(properties.entries)}):properties}function CfnTransformerCopyValuePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("entries","Entries",properties.Entries!=null?cfn_parse().FromCloudFormation.getArray(CfnTransformerCopyValueEntryPropertyFromCloudFormation)(properties.Entries):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerCsvPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("columns",cdk().listValidator(cdk().validateString))(properties.columns)),errors.collect(cdk().propertyValidator("delimiter",cdk().validateString)(properties.delimiter)),errors.collect(cdk().propertyValidator("quoteCharacter",cdk().validateString)(properties.quoteCharacter)),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.wrap('supplied properties not correct for "CsvProperty"')}function convertCfnTransformerCsvPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerCsvPropertyValidator(properties).assertSuccess(),{Columns:cdk().listMapper(cdk().stringToCloudFormation)(properties.columns),Delimiter:cdk().stringToCloudFormation(properties.delimiter),QuoteCharacter:cdk().stringToCloudFormation(properties.quoteCharacter),Source:cdk().stringToCloudFormation(properties.source)}):properties}function CfnTransformerCsvPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("columns","Columns",properties.Columns!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.Columns):void 0),ret.addPropertyResult("delimiter","Delimiter",properties.Delimiter!=null?cfn_parse().FromCloudFormation.getString(properties.Delimiter):void 0),ret.addPropertyResult("quoteCharacter","QuoteCharacter",properties.QuoteCharacter!=null?cfn_parse().FromCloudFormation.getString(properties.QuoteCharacter):void 0),ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerDateTimeConverterPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("locale",cdk().validateString)(properties.locale)),errors.collect(cdk().propertyValidator("matchPatterns",cdk().requiredValidator)(properties.matchPatterns)),errors.collect(cdk().propertyValidator("matchPatterns",cdk().listValidator(cdk().validateString))(properties.matchPatterns)),errors.collect(cdk().propertyValidator("source",cdk().requiredValidator)(properties.source)),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.collect(cdk().propertyValidator("sourceTimezone",cdk().validateString)(properties.sourceTimezone)),errors.collect(cdk().propertyValidator("target",cdk().requiredValidator)(properties.target)),errors.collect(cdk().propertyValidator("target",cdk().validateString)(properties.target)),errors.collect(cdk().propertyValidator("targetFormat",cdk().validateString)(properties.targetFormat)),errors.collect(cdk().propertyValidator("targetTimezone",cdk().validateString)(properties.targetTimezone)),errors.wrap('supplied properties not correct for "DateTimeConverterProperty"')}function convertCfnTransformerDateTimeConverterPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerDateTimeConverterPropertyValidator(properties).assertSuccess(),{Locale:cdk().stringToCloudFormation(properties.locale),MatchPatterns:cdk().listMapper(cdk().stringToCloudFormation)(properties.matchPatterns),Source:cdk().stringToCloudFormation(properties.source),SourceTimezone:cdk().stringToCloudFormation(properties.sourceTimezone),Target:cdk().stringToCloudFormation(properties.target),TargetFormat:cdk().stringToCloudFormation(properties.targetFormat),TargetTimezone:cdk().stringToCloudFormation(properties.targetTimezone)}):properties}function CfnTransformerDateTimeConverterPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("locale","Locale",properties.Locale!=null?cfn_parse().FromCloudFormation.getString(properties.Locale):void 0),ret.addPropertyResult("matchPatterns","MatchPatterns",properties.MatchPatterns!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.MatchPatterns):void 0),ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addPropertyResult("sourceTimezone","SourceTimezone",properties.SourceTimezone!=null?cfn_parse().FromCloudFormation.getString(properties.SourceTimezone):void 0),ret.addPropertyResult("target","Target",properties.Target!=null?cfn_parse().FromCloudFormation.getString(properties.Target):void 0),ret.addPropertyResult("targetFormat","TargetFormat",properties.TargetFormat!=null?cfn_parse().FromCloudFormation.getString(properties.TargetFormat):void 0),ret.addPropertyResult("targetTimezone","TargetTimezone",properties.TargetTimezone!=null?cfn_parse().FromCloudFormation.getString(properties.TargetTimezone):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerDeleteKeysPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("withKeys",cdk().requiredValidator)(properties.withKeys)),errors.collect(cdk().propertyValidator("withKeys",cdk().listValidator(cdk().validateString))(properties.withKeys)),errors.wrap('supplied properties not correct for "DeleteKeysProperty"')}function convertCfnTransformerDeleteKeysPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerDeleteKeysPropertyValidator(properties).assertSuccess(),{WithKeys:cdk().listMapper(cdk().stringToCloudFormation)(properties.withKeys)}):properties}function CfnTransformerDeleteKeysPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("withKeys","WithKeys",properties.WithKeys!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.WithKeys):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerGrokPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("match",cdk().requiredValidator)(properties.match)),errors.collect(cdk().propertyValidator("match",cdk().validateString)(properties.match)),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.wrap('supplied properties not correct for "GrokProperty"')}function convertCfnTransformerGrokPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerGrokPropertyValidator(properties).assertSuccess(),{Match:cdk().stringToCloudFormation(properties.match),Source:cdk().stringToCloudFormation(properties.source)}):properties}function CfnTransformerGrokPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("match","Match",properties.Match!=null?cfn_parse().FromCloudFormation.getString(properties.Match):void 0),ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerListToMapPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("flatten",cdk().validateBoolean)(properties.flatten)),errors.collect(cdk().propertyValidator("flattenedElement",cdk().validateString)(properties.flattenedElement)),errors.collect(cdk().propertyValidator("key",cdk().requiredValidator)(properties.key)),errors.collect(cdk().propertyValidator("key",cdk().validateString)(properties.key)),errors.collect(cdk().propertyValidator("source",cdk().requiredValidator)(properties.source)),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.collect(cdk().propertyValidator("target",cdk().validateString)(properties.target)),errors.collect(cdk().propertyValidator("valueKey",cdk().validateString)(properties.valueKey)),errors.wrap('supplied properties not correct for "ListToMapProperty"')}function convertCfnTransformerListToMapPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerListToMapPropertyValidator(properties).assertSuccess(),{Flatten:cdk().booleanToCloudFormation(properties.flatten),FlattenedElement:cdk().stringToCloudFormation(properties.flattenedElement),Key:cdk().stringToCloudFormation(properties.key),Source:cdk().stringToCloudFormation(properties.source),Target:cdk().stringToCloudFormation(properties.target),ValueKey:cdk().stringToCloudFormation(properties.valueKey)}):properties}function CfnTransformerListToMapPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("flatten","Flatten",properties.Flatten!=null?cfn_parse().FromCloudFormation.getBoolean(properties.Flatten):void 0),ret.addPropertyResult("flattenedElement","FlattenedElement",properties.FlattenedElement!=null?cfn_parse().FromCloudFormation.getString(properties.FlattenedElement):void 0),ret.addPropertyResult("key","Key",properties.Key!=null?cfn_parse().FromCloudFormation.getString(properties.Key):void 0),ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addPropertyResult("target","Target",properties.Target!=null?cfn_parse().FromCloudFormation.getString(properties.Target):void 0),ret.addPropertyResult("valueKey","ValueKey",properties.ValueKey!=null?cfn_parse().FromCloudFormation.getString(properties.ValueKey):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerAddKeyEntryPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("key",cdk().requiredValidator)(properties.key)),errors.collect(cdk().propertyValidator("key",cdk().validateString)(properties.key)),errors.collect(cdk().propertyValidator("overwriteIfExists",cdk().validateBoolean)(properties.overwriteIfExists)),errors.collect(cdk().propertyValidator("value",cdk().requiredValidator)(properties.value)),errors.collect(cdk().propertyValidator("value",cdk().validateString)(properties.value)),errors.wrap('supplied properties not correct for "AddKeyEntryProperty"')}function convertCfnTransformerAddKeyEntryPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerAddKeyEntryPropertyValidator(properties).assertSuccess(),{Key:cdk().stringToCloudFormation(properties.key),OverwriteIfExists:cdk().booleanToCloudFormation(properties.overwriteIfExists),Value:cdk().stringToCloudFormation(properties.value)}):properties}function CfnTransformerAddKeyEntryPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",properties.Key!=null?cfn_parse().FromCloudFormation.getString(properties.Key):void 0),ret.addPropertyResult("overwriteIfExists","OverwriteIfExists",properties.OverwriteIfExists!=null?cfn_parse().FromCloudFormation.getBoolean(properties.OverwriteIfExists):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse().FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerAddKeysPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("entries",cdk().requiredValidator)(properties.entries)),errors.collect(cdk().propertyValidator("entries",cdk().listValidator(CfnTransformerAddKeyEntryPropertyValidator))(properties.entries)),errors.wrap('supplied properties not correct for "AddKeysProperty"')}function convertCfnTransformerAddKeysPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerAddKeysPropertyValidator(properties).assertSuccess(),{Entries:cdk().listMapper(convertCfnTransformerAddKeyEntryPropertyToCloudFormation)(properties.entries)}):properties}function CfnTransformerAddKeysPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("entries","Entries",properties.Entries!=null?cfn_parse().FromCloudFormation.getArray(CfnTransformerAddKeyEntryPropertyFromCloudFormation)(properties.Entries):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerMoveKeyEntryPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("overwriteIfExists",cdk().validateBoolean)(properties.overwriteIfExists)),errors.collect(cdk().propertyValidator("source",cdk().requiredValidator)(properties.source)),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.collect(cdk().propertyValidator("target",cdk().requiredValidator)(properties.target)),errors.collect(cdk().propertyValidator("target",cdk().validateString)(properties.target)),errors.wrap('supplied properties not correct for "MoveKeyEntryProperty"')}function convertCfnTransformerMoveKeyEntryPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerMoveKeyEntryPropertyValidator(properties).assertSuccess(),{OverwriteIfExists:cdk().booleanToCloudFormation(properties.overwriteIfExists),Source:cdk().stringToCloudFormation(properties.source),Target:cdk().stringToCloudFormation(properties.target)}):properties}function CfnTransformerMoveKeyEntryPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("overwriteIfExists","OverwriteIfExists",properties.OverwriteIfExists!=null?cfn_parse().FromCloudFormation.getBoolean(properties.OverwriteIfExists):void 0),ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addPropertyResult("target","Target",properties.Target!=null?cfn_parse().FromCloudFormation.getString(properties.Target):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerMoveKeysPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("entries",cdk().requiredValidator)(properties.entries)),errors.collect(cdk().propertyValidator("entries",cdk().listValidator(CfnTransformerMoveKeyEntryPropertyValidator))(properties.entries)),errors.wrap('supplied properties not correct for "MoveKeysProperty"')}function convertCfnTransformerMoveKeysPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerMoveKeysPropertyValidator(properties).assertSuccess(),{Entries:cdk().listMapper(convertCfnTransformerMoveKeyEntryPropertyToCloudFormation)(properties.entries)}):properties}function CfnTransformerMoveKeysPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("entries","Entries",properties.Entries!=null?cfn_parse().FromCloudFormation.getArray(CfnTransformerMoveKeyEntryPropertyFromCloudFormation)(properties.Entries):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerRenameKeyEntryPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("key",cdk().requiredValidator)(properties.key)),errors.collect(cdk().propertyValidator("key",cdk().validateString)(properties.key)),errors.collect(cdk().propertyValidator("overwriteIfExists",cdk().validateBoolean)(properties.overwriteIfExists)),errors.collect(cdk().propertyValidator("renameTo",cdk().requiredValidator)(properties.renameTo)),errors.collect(cdk().propertyValidator("renameTo",cdk().validateString)(properties.renameTo)),errors.wrap('supplied properties not correct for "RenameKeyEntryProperty"')}function convertCfnTransformerRenameKeyEntryPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerRenameKeyEntryPropertyValidator(properties).assertSuccess(),{Key:cdk().stringToCloudFormation(properties.key),OverwriteIfExists:cdk().booleanToCloudFormation(properties.overwriteIfExists),RenameTo:cdk().stringToCloudFormation(properties.renameTo)}):properties}function CfnTransformerRenameKeyEntryPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",properties.Key!=null?cfn_parse().FromCloudFormation.getString(properties.Key):void 0),ret.addPropertyResult("overwriteIfExists","OverwriteIfExists",properties.OverwriteIfExists!=null?cfn_parse().FromCloudFormation.getBoolean(properties.OverwriteIfExists):void 0),ret.addPropertyResult("renameTo","RenameTo",properties.RenameTo!=null?cfn_parse().FromCloudFormation.getString(properties.RenameTo):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerRenameKeysPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("entries",cdk().requiredValidator)(properties.entries)),errors.collect(cdk().propertyValidator("entries",cdk().listValidator(CfnTransformerRenameKeyEntryPropertyValidator))(properties.entries)),errors.wrap('supplied properties not correct for "RenameKeysProperty"')}function convertCfnTransformerRenameKeysPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerRenameKeysPropertyValidator(properties).assertSuccess(),{Entries:cdk().listMapper(convertCfnTransformerRenameKeyEntryPropertyToCloudFormation)(properties.entries)}):properties}function CfnTransformerRenameKeysPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("entries","Entries",properties.Entries!=null?cfn_parse().FromCloudFormation.getArray(CfnTransformerRenameKeyEntryPropertyFromCloudFormation)(properties.Entries):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerLowerCaseStringPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("withKeys",cdk().requiredValidator)(properties.withKeys)),errors.collect(cdk().propertyValidator("withKeys",cdk().listValidator(cdk().validateString))(properties.withKeys)),errors.wrap('supplied properties not correct for "LowerCaseStringProperty"')}function convertCfnTransformerLowerCaseStringPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerLowerCaseStringPropertyValidator(properties).assertSuccess(),{WithKeys:cdk().listMapper(cdk().stringToCloudFormation)(properties.withKeys)}):properties}function CfnTransformerLowerCaseStringPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("withKeys","WithKeys",properties.WithKeys!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.WithKeys):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerSplitStringEntryPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("delimiter",cdk().requiredValidator)(properties.delimiter)),errors.collect(cdk().propertyValidator("delimiter",cdk().validateString)(properties.delimiter)),errors.collect(cdk().propertyValidator("source",cdk().requiredValidator)(properties.source)),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.wrap('supplied properties not correct for "SplitStringEntryProperty"')}function convertCfnTransformerSplitStringEntryPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerSplitStringEntryPropertyValidator(properties).assertSuccess(),{Delimiter:cdk().stringToCloudFormation(properties.delimiter),Source:cdk().stringToCloudFormation(properties.source)}):properties}function CfnTransformerSplitStringEntryPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("delimiter","Delimiter",properties.Delimiter!=null?cfn_parse().FromCloudFormation.getString(properties.Delimiter):void 0),ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerSplitStringPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("entries",cdk().requiredValidator)(properties.entries)),errors.collect(cdk().propertyValidator("entries",cdk().listValidator(CfnTransformerSplitStringEntryPropertyValidator))(properties.entries)),errors.wrap('supplied properties not correct for "SplitStringProperty"')}function convertCfnTransformerSplitStringPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerSplitStringPropertyValidator(properties).assertSuccess(),{Entries:cdk().listMapper(convertCfnTransformerSplitStringEntryPropertyToCloudFormation)(properties.entries)}):properties}function CfnTransformerSplitStringPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("entries","Entries",properties.Entries!=null?cfn_parse().FromCloudFormation.getArray(CfnTransformerSplitStringEntryPropertyFromCloudFormation)(properties.Entries):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerSubstituteStringEntryPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("from",cdk().requiredValidator)(properties.from)),errors.collect(cdk().propertyValidator("from",cdk().validateString)(properties.from)),errors.collect(cdk().propertyValidator("source",cdk().requiredValidator)(properties.source)),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.collect(cdk().propertyValidator("to",cdk().requiredValidator)(properties.to)),errors.collect(cdk().propertyValidator("to",cdk().validateString)(properties.to)),errors.wrap('supplied properties not correct for "SubstituteStringEntryProperty"')}function convertCfnTransformerSubstituteStringEntryPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerSubstituteStringEntryPropertyValidator(properties).assertSuccess(),{From:cdk().stringToCloudFormation(properties.from),Source:cdk().stringToCloudFormation(properties.source),To:cdk().stringToCloudFormation(properties.to)}):properties}function CfnTransformerSubstituteStringEntryPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("from","From",properties.From!=null?cfn_parse().FromCloudFormation.getString(properties.From):void 0),ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addPropertyResult("to","To",properties.To!=null?cfn_parse().FromCloudFormation.getString(properties.To):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerSubstituteStringPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("entries",cdk().requiredValidator)(properties.entries)),errors.collect(cdk().propertyValidator("entries",cdk().listValidator(CfnTransformerSubstituteStringEntryPropertyValidator))(properties.entries)),errors.wrap('supplied properties not correct for "SubstituteStringProperty"')}function convertCfnTransformerSubstituteStringPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerSubstituteStringPropertyValidator(properties).assertSuccess(),{Entries:cdk().listMapper(convertCfnTransformerSubstituteStringEntryPropertyToCloudFormation)(properties.entries)}):properties}function CfnTransformerSubstituteStringPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("entries","Entries",properties.Entries!=null?cfn_parse().FromCloudFormation.getArray(CfnTransformerSubstituteStringEntryPropertyFromCloudFormation)(properties.Entries):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerTrimStringPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("withKeys",cdk().requiredValidator)(properties.withKeys)),errors.collect(cdk().propertyValidator("withKeys",cdk().listValidator(cdk().validateString))(properties.withKeys)),errors.wrap('supplied properties not correct for "TrimStringProperty"')}function convertCfnTransformerTrimStringPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerTrimStringPropertyValidator(properties).assertSuccess(),{WithKeys:cdk().listMapper(cdk().stringToCloudFormation)(properties.withKeys)}):properties}function CfnTransformerTrimStringPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("withKeys","WithKeys",properties.WithKeys!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.WithKeys):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerUpperCaseStringPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("withKeys",cdk().requiredValidator)(properties.withKeys)),errors.collect(cdk().propertyValidator("withKeys",cdk().listValidator(cdk().validateString))(properties.withKeys)),errors.wrap('supplied properties not correct for "UpperCaseStringProperty"')}function convertCfnTransformerUpperCaseStringPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerUpperCaseStringPropertyValidator(properties).assertSuccess(),{WithKeys:cdk().listMapper(cdk().stringToCloudFormation)(properties.withKeys)}):properties}function CfnTransformerUpperCaseStringPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("withKeys","WithKeys",properties.WithKeys!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.WithKeys):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerTypeConverterEntryPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("key",cdk().requiredValidator)(properties.key)),errors.collect(cdk().propertyValidator("key",cdk().validateString)(properties.key)),errors.collect(cdk().propertyValidator("type",cdk().requiredValidator)(properties.type)),errors.collect(cdk().propertyValidator("type",cdk().validateString)(properties.type)),errors.wrap('supplied properties not correct for "TypeConverterEntryProperty"')}function convertCfnTransformerTypeConverterEntryPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerTypeConverterEntryPropertyValidator(properties).assertSuccess(),{Key:cdk().stringToCloudFormation(properties.key),Type:cdk().stringToCloudFormation(properties.type)}):properties}function CfnTransformerTypeConverterEntryPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",properties.Key!=null?cfn_parse().FromCloudFormation.getString(properties.Key):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse().FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerTypeConverterPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("entries",cdk().requiredValidator)(properties.entries)),errors.collect(cdk().propertyValidator("entries",cdk().listValidator(CfnTransformerTypeConverterEntryPropertyValidator))(properties.entries)),errors.wrap('supplied properties not correct for "TypeConverterProperty"')}function convertCfnTransformerTypeConverterPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerTypeConverterPropertyValidator(properties).assertSuccess(),{Entries:cdk().listMapper(convertCfnTransformerTypeConverterEntryPropertyToCloudFormation)(properties.entries)}):properties}function CfnTransformerTypeConverterPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("entries","Entries",properties.Entries!=null?cfn_parse().FromCloudFormation.getArray(CfnTransformerTypeConverterEntryPropertyFromCloudFormation)(properties.Entries):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerProcessorPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("addKeys",CfnTransformerAddKeysPropertyValidator)(properties.addKeys)),errors.collect(cdk().propertyValidator("copyValue",CfnTransformerCopyValuePropertyValidator)(properties.copyValue)),errors.collect(cdk().propertyValidator("csv",CfnTransformerCsvPropertyValidator)(properties.csv)),errors.collect(cdk().propertyValidator("dateTimeConverter",CfnTransformerDateTimeConverterPropertyValidator)(properties.dateTimeConverter)),errors.collect(cdk().propertyValidator("deleteKeys",CfnTransformerDeleteKeysPropertyValidator)(properties.deleteKeys)),errors.collect(cdk().propertyValidator("grok",CfnTransformerGrokPropertyValidator)(properties.grok)),errors.collect(cdk().propertyValidator("listToMap",CfnTransformerListToMapPropertyValidator)(properties.listToMap)),errors.collect(cdk().propertyValidator("lowerCaseString",CfnTransformerLowerCaseStringPropertyValidator)(properties.lowerCaseString)),errors.collect(cdk().propertyValidator("moveKeys",CfnTransformerMoveKeysPropertyValidator)(properties.moveKeys)),errors.collect(cdk().propertyValidator("parseCloudfront",CfnTransformerParseCloudfrontPropertyValidator)(properties.parseCloudfront)),errors.collect(cdk().propertyValidator("parseJson",CfnTransformerParseJSONPropertyValidator)(properties.parseJson)),errors.collect(cdk().propertyValidator("parseKeyValue",CfnTransformerParseKeyValuePropertyValidator)(properties.parseKeyValue)),errors.collect(cdk().propertyValidator("parsePostgres",CfnTransformerParsePostgresPropertyValidator)(properties.parsePostgres)),errors.collect(cdk().propertyValidator("parseRoute53",CfnTransformerParseRoute53PropertyValidator)(properties.parseRoute53)),errors.collect(cdk().propertyValidator("parseVpc",CfnTransformerParseVPCPropertyValidator)(properties.parseVpc)),errors.collect(cdk().propertyValidator("parseWaf",CfnTransformerParseWAFPropertyValidator)(properties.parseWaf)),errors.collect(cdk().propertyValidator("renameKeys",CfnTransformerRenameKeysPropertyValidator)(properties.renameKeys)),errors.collect(cdk().propertyValidator("splitString",CfnTransformerSplitStringPropertyValidator)(properties.splitString)),errors.collect(cdk().propertyValidator("substituteString",CfnTransformerSubstituteStringPropertyValidator)(properties.substituteString)),errors.collect(cdk().propertyValidator("trimString",CfnTransformerTrimStringPropertyValidator)(properties.trimString)),errors.collect(cdk().propertyValidator("typeConverter",CfnTransformerTypeConverterPropertyValidator)(properties.typeConverter)),errors.collect(cdk().propertyValidator("upperCaseString",CfnTransformerUpperCaseStringPropertyValidator)(properties.upperCaseString)),errors.wrap('supplied properties not correct for "ProcessorProperty"')}function convertCfnTransformerProcessorPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerProcessorPropertyValidator(properties).assertSuccess(),{AddKeys:convertCfnTransformerAddKeysPropertyToCloudFormation(properties.addKeys),CopyValue:convertCfnTransformerCopyValuePropertyToCloudFormation(properties.copyValue),Csv:convertCfnTransformerCsvPropertyToCloudFormation(properties.csv),DateTimeConverter:convertCfnTransformerDateTimeConverterPropertyToCloudFormation(properties.dateTimeConverter),DeleteKeys:convertCfnTransformerDeleteKeysPropertyToCloudFormation(properties.deleteKeys),Grok:convertCfnTransformerGrokPropertyToCloudFormation(properties.grok),ListToMap:convertCfnTransformerListToMapPropertyToCloudFormation(properties.listToMap),LowerCaseString:convertCfnTransformerLowerCaseStringPropertyToCloudFormation(properties.lowerCaseString),MoveKeys:convertCfnTransformerMoveKeysPropertyToCloudFormation(properties.moveKeys),ParseCloudfront:convertCfnTransformerParseCloudfrontPropertyToCloudFormation(properties.parseCloudfront),ParseJSON:convertCfnTransformerParseJSONPropertyToCloudFormation(properties.parseJson),ParseKeyValue:convertCfnTransformerParseKeyValuePropertyToCloudFormation(properties.parseKeyValue),ParsePostgres:convertCfnTransformerParsePostgresPropertyToCloudFormation(properties.parsePostgres),ParseRoute53:convertCfnTransformerParseRoute53PropertyToCloudFormation(properties.parseRoute53),ParseVPC:convertCfnTransformerParseVPCPropertyToCloudFormation(properties.parseVpc),ParseWAF:convertCfnTransformerParseWAFPropertyToCloudFormation(properties.parseWaf),RenameKeys:convertCfnTransformerRenameKeysPropertyToCloudFormation(properties.renameKeys),SplitString:convertCfnTransformerSplitStringPropertyToCloudFormation(properties.splitString),SubstituteString:convertCfnTransformerSubstituteStringPropertyToCloudFormation(properties.substituteString),TrimString:convertCfnTransformerTrimStringPropertyToCloudFormation(properties.trimString),TypeConverter:convertCfnTransformerTypeConverterPropertyToCloudFormation(properties.typeConverter),UpperCaseString:convertCfnTransformerUpperCaseStringPropertyToCloudFormation(properties.upperCaseString)}):properties}function CfnTransformerProcessorPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("addKeys","AddKeys",properties.AddKeys!=null?CfnTransformerAddKeysPropertyFromCloudFormation(properties.AddKeys):void 0),ret.addPropertyResult("copyValue","CopyValue",properties.CopyValue!=null?CfnTransformerCopyValuePropertyFromCloudFormation(properties.CopyValue):void 0),ret.addPropertyResult("csv","Csv",properties.Csv!=null?CfnTransformerCsvPropertyFromCloudFormation(properties.Csv):void 0),ret.addPropertyResult("dateTimeConverter","DateTimeConverter",properties.DateTimeConverter!=null?CfnTransformerDateTimeConverterPropertyFromCloudFormation(properties.DateTimeConverter):void 0),ret.addPropertyResult("deleteKeys","DeleteKeys",properties.DeleteKeys!=null?CfnTransformerDeleteKeysPropertyFromCloudFormation(properties.DeleteKeys):void 0),ret.addPropertyResult("grok","Grok",properties.Grok!=null?CfnTransformerGrokPropertyFromCloudFormation(properties.Grok):void 0),ret.addPropertyResult("listToMap","ListToMap",properties.ListToMap!=null?CfnTransformerListToMapPropertyFromCloudFormation(properties.ListToMap):void 0),ret.addPropertyResult("lowerCaseString","LowerCaseString",properties.LowerCaseString!=null?CfnTransformerLowerCaseStringPropertyFromCloudFormation(properties.LowerCaseString):void 0),ret.addPropertyResult("moveKeys","MoveKeys",properties.MoveKeys!=null?CfnTransformerMoveKeysPropertyFromCloudFormation(properties.MoveKeys):void 0),ret.addPropertyResult("parseCloudfront","ParseCloudfront",properties.ParseCloudfront!=null?CfnTransformerParseCloudfrontPropertyFromCloudFormation(properties.ParseCloudfront):void 0),ret.addPropertyResult("parseJson","ParseJSON",properties.ParseJSON!=null?CfnTransformerParseJSONPropertyFromCloudFormation(properties.ParseJSON):void 0),ret.addPropertyResult("parseKeyValue","ParseKeyValue",properties.ParseKeyValue!=null?CfnTransformerParseKeyValuePropertyFromCloudFormation(properties.ParseKeyValue):void 0),ret.addPropertyResult("parsePostgres","ParsePostgres",properties.ParsePostgres!=null?CfnTransformerParsePostgresPropertyFromCloudFormation(properties.ParsePostgres):void 0),ret.addPropertyResult("parseRoute53","ParseRoute53",properties.ParseRoute53!=null?CfnTransformerParseRoute53PropertyFromCloudFormation(properties.ParseRoute53):void 0),ret.addPropertyResult("parseVpc","ParseVPC",properties.ParseVPC!=null?CfnTransformerParseVPCPropertyFromCloudFormation(properties.ParseVPC):void 0),ret.addPropertyResult("parseWaf","ParseWAF",properties.ParseWAF!=null?CfnTransformerParseWAFPropertyFromCloudFormation(properties.ParseWAF):void 0),ret.addPropertyResult("renameKeys","RenameKeys",properties.RenameKeys!=null?CfnTransformerRenameKeysPropertyFromCloudFormation(properties.RenameKeys):void 0),ret.addPropertyResult("splitString","SplitString",properties.SplitString!=null?CfnTransformerSplitStringPropertyFromCloudFormation(properties.SplitString):void 0),ret.addPropertyResult("substituteString","SubstituteString",properties.SubstituteString!=null?CfnTransformerSubstituteStringPropertyFromCloudFormation(properties.SubstituteString):void 0),ret.addPropertyResult("trimString","TrimString",properties.TrimString!=null?CfnTransformerTrimStringPropertyFromCloudFormation(properties.TrimString):void 0),ret.addPropertyResult("typeConverter","TypeConverter",properties.TypeConverter!=null?CfnTransformerTypeConverterPropertyFromCloudFormation(properties.TypeConverter):void 0),ret.addPropertyResult("upperCaseString","UpperCaseString",properties.UpperCaseString!=null?CfnTransformerUpperCaseStringPropertyFromCloudFormation(properties.UpperCaseString):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransformerPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("logGroupIdentifier",cdk().requiredValidator)(properties.logGroupIdentifier)),errors.collect(cdk().propertyValidator("logGroupIdentifier",cdk().validateString)(properties.logGroupIdentifier)),errors.collect(cdk().propertyValidator("transformerConfig",cdk().requiredValidator)(properties.transformerConfig)),errors.collect(cdk().propertyValidator("transformerConfig",cdk().listValidator(CfnTransformerProcessorPropertyValidator))(properties.transformerConfig)),errors.wrap('supplied properties not correct for "CfnTransformerProps"')}function convertCfnTransformerPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTransformerPropsValidator(properties).assertSuccess(),{LogGroupIdentifier:cdk().stringToCloudFormation(properties.logGroupIdentifier),TransformerConfig:cdk().listMapper(convertCfnTransformerProcessorPropertyToCloudFormation)(properties.transformerConfig)}):properties}function CfnTransformerPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("logGroupIdentifier","LogGroupIdentifier",properties.LogGroupIdentifier!=null?cfn_parse().FromCloudFormation.getString(properties.LogGroupIdentifier):void 0),ret.addPropertyResult("transformerConfig","TransformerConfig",properties.TransformerConfig!=null?cfn_parse().FromCloudFormation.getArray(CfnTransformerProcessorPropertyFromCloudFormation)(properties.TransformerConfig):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
