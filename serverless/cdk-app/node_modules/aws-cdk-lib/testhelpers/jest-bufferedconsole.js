"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var jest_environment_node_1=()=>{var tmp=require("jest-environment-node");return jest_environment_node_1=()=>tmp,tmp};class TestEnvironment extends jest_environment_node_1().TestEnvironment{constructor(config,context){super(config,context),this.log=new Array,this.handleTestEvent=async(event,_state)=>{if(event.name==="test_done"&&event.test.errors.length>0&&this.log.length>0){this.originalConsole.log(`[Console output] ${fullTestName(event.test)}
`);for(const item of this.log)this.originalConsole[item.type]("    "+item.message);this.originalConsole.log(`
`)}event.name==="test_done"&&(this.log=[])}}async setup(){await super.setup(),this.log=[],this.originalConsole=console,this.originalStdoutWrite=process.stdout.write,this.originalStderrWrite=process.stderr.write,this.global.console={...console,log:message=>this.log.push({type:"log",message}),error:message=>this.log.push({type:"error",message}),warn:message=>this.log.push({type:"warn",message}),info:message=>this.log.push({type:"info",message}),debug:message=>this.log.push({type:"debug",message})};const self=this;process.stdout.write=function(chunk,enccb){const encoding=typeof enccb=="string"?enccb:"utf-8",message=Buffer.isBuffer(chunk)?chunk.toString(encoding):chunk;self.log.push({type:"log",message:message.replace(/\n$/,"")}),typeof enccb=="function"&&enccb()},process.stderr.write=function(chunk,enccb){const encoding=typeof enccb=="string"?enccb:"utf-8",message=Buffer.isBuffer(chunk)?chunk.toString(encoding):chunk;self.log.push({type:"error",message:message.replace(/\n$/,"")}),typeof enccb=="function"&&enccb()}}async teardown(){this.global.console=this.originalConsole,process.stdout.write=this.originalStdoutWrite,process.stderr.write=this.originalStderrWrite,await super.teardown()}}exports.default=TestEnvironment;function fullTestName(test){let ret=test.name;for(;test.parent!=null&&test.parent.name!=="ROOT_DESCRIBE_BLOCK";)ret=test.parent.name+" \u203A "+fullTestName,test=test.parent;return ret}
