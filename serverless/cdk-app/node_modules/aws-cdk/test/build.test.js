"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const build_1 = require("../lib/build");
describe('buildAllStackAssets', () => {
    const A = { id: 'A' };
    const B = { id: 'B' };
    const C = { id: 'C' };
    const toPublish = [A, B, C];
    const sleep = async (duration) => new Promise((resolve) => setTimeout(() => resolve(), duration));
    test('build', async () => {
        // GIVEN
        const buildStackAssets = jest.fn(() => sleep(1));
        // WHEN/THEN
        await expect((0, build_1.buildAllStackAssets)(toPublish, { buildStackAssets }))
            .resolves
            .toBeUndefined();
        expect(buildStackAssets).toHaveBeenCalledTimes(3);
        expect(buildStackAssets).toHaveBeenCalledWith(A);
        expect(buildStackAssets).toHaveBeenCalledWith(B);
        expect(buildStackAssets).toHaveBeenCalledWith(C);
    });
    test('errors', async () => {
        // GIVEN
        const buildStackAssets = async () => { throw new Error('Message'); };
        // WHEN/THEN
        await expect((0, build_1.buildAllStackAssets)(toPublish, { buildStackAssets }))
            .rejects
            .toThrow('Building Assets Failed: Error: Message, Error: Message, Error: Message');
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImJ1aWxkLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSx3Q0FBbUQ7QUFJbkQsUUFBUSxDQUFDLHFCQUFxQixFQUFFLEdBQUcsRUFBRTtJQUNuQyxNQUFNLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQztJQUN0QixNQUFNLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQztJQUN0QixNQUFNLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQztJQUN0QixNQUFNLFNBQVMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUF1QixDQUFDO0lBRWxELE1BQU0sS0FBSyxHQUFHLEtBQUssRUFBRSxRQUFnQixFQUFFLEVBQUUsQ0FBQyxJQUFJLE9BQU8sQ0FBTyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFFaEgsSUFBSSxDQUFDLE9BQU8sRUFBRSxLQUFLLElBQUksRUFBRTtRQUN2QixRQUFRO1FBQ1IsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWpELFlBQVk7UUFDWixNQUFNLE1BQU0sQ0FBQyxJQUFBLDJCQUFtQixFQUFDLFNBQVMsRUFBRSxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQzthQUMvRCxRQUFRO2FBQ1IsYUFBYSxFQUFFLENBQUM7UUFFbkIsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEQsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakQsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakQsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbkQsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLENBQUMsUUFBUSxFQUFFLEtBQUssSUFBSSxFQUFFO1FBQ3hCLFFBQVE7UUFDUixNQUFNLGdCQUFnQixHQUFHLEtBQUssSUFBSSxFQUFFLEdBQUcsTUFBTSxJQUFJLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVyRSxZQUFZO1FBQ1osTUFBTSxNQUFNLENBQUMsSUFBQSwyQkFBbUIsRUFBQyxTQUFTLEVBQUUsRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7YUFDL0QsT0FBTzthQUNQLE9BQU8sQ0FBQyx3RUFBd0UsQ0FBQyxDQUFDO0lBQ3ZGLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBpbXBvcnQvb3JkZXIgKi9cbmltcG9ydCAqIGFzIGN4YXBpIGZyb20gJ0Bhd3MtY2RrL2N4LWFwaSc7XG5pbXBvcnQgeyBidWlsZEFsbFN0YWNrQXNzZXRzIH0gZnJvbSAnLi4vbGliL2J1aWxkJztcblxudHlwZSBTdGFjayA9IGN4YXBpLkNsb3VkRm9ybWF0aW9uU3RhY2tBcnRpZmFjdDtcblxuZGVzY3JpYmUoJ2J1aWxkQWxsU3RhY2tBc3NldHMnLCAoKSA9PiB7XG4gIGNvbnN0IEEgPSB7IGlkOiAnQScgfTtcbiAgY29uc3QgQiA9IHsgaWQ6ICdCJyB9O1xuICBjb25zdCBDID0geyBpZDogJ0MnIH07XG4gIGNvbnN0IHRvUHVibGlzaCA9IFtBLCBCLCBDXSBhcyB1bmtub3duIGFzIFN0YWNrW107XG5cbiAgY29uc3Qgc2xlZXAgPSBhc3luYyAoZHVyYXRpb246IG51bWJlcikgPT4gbmV3IFByb21pc2U8dm9pZD4oKHJlc29sdmUpID0+IHNldFRpbWVvdXQoKCkgPT4gcmVzb2x2ZSgpLCBkdXJhdGlvbikpO1xuXG4gIHRlc3QoJ2J1aWxkJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIEdJVkVOXG4gICAgY29uc3QgYnVpbGRTdGFja0Fzc2V0cyA9IGplc3QuZm4oKCkgPT4gc2xlZXAoMSkpO1xuXG4gICAgLy8gV0hFTi9USEVOXG4gICAgYXdhaXQgZXhwZWN0KGJ1aWxkQWxsU3RhY2tBc3NldHModG9QdWJsaXNoLCB7IGJ1aWxkU3RhY2tBc3NldHMgfSkpXG4gICAgICAucmVzb2x2ZXNcbiAgICAgIC50b0JlVW5kZWZpbmVkKCk7XG5cbiAgICBleHBlY3QoYnVpbGRTdGFja0Fzc2V0cykudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDMpO1xuICAgIGV4cGVjdChidWlsZFN0YWNrQXNzZXRzKS50b0hhdmVCZWVuQ2FsbGVkV2l0aChBKTtcbiAgICBleHBlY3QoYnVpbGRTdGFja0Fzc2V0cykudG9IYXZlQmVlbkNhbGxlZFdpdGgoQik7XG4gICAgZXhwZWN0KGJ1aWxkU3RhY2tBc3NldHMpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKEMpO1xuICB9KTtcblxuICB0ZXN0KCdlcnJvcnMnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gR0lWRU5cbiAgICBjb25zdCBidWlsZFN0YWNrQXNzZXRzID0gYXN5bmMgKCkgPT4geyB0aHJvdyBuZXcgRXJyb3IoJ01lc3NhZ2UnKTsgfTtcblxuICAgIC8vIFdIRU4vVEhFTlxuICAgIGF3YWl0IGV4cGVjdChidWlsZEFsbFN0YWNrQXNzZXRzKHRvUHVibGlzaCwgeyBidWlsZFN0YWNrQXNzZXRzIH0pKVxuICAgICAgLnJlamVjdHNcbiAgICAgIC50b1Rocm93KCdCdWlsZGluZyBBc3NldHMgRmFpbGVkOiBFcnJvcjogTWVzc2FnZSwgRXJyb3I6IE1lc3NhZ2UsIEVycm9yOiBNZXNzYWdlJyk7XG4gIH0pO1xufSk7XG4iXX0=